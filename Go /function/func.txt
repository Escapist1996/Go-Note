package main

func main() {
	// array := make(map[int]func() int)

	// array[func() int { return 10 }()] = func() int {
	// 	return 12
	// }
	// fmt.Println(array)			//ok

	// array := make(map[func() int]int)		//	error
	// array[func() int { return 12 }] = 10
	// fmt.Println(array)
}

在go语言中，函数被看作是第一类值（first-class value）：函数和其他值一样，可以被赋值，可以传递给函数，可以从函数返回。
	也可以被当作一种函数类型。
	例如，有函数 func square(n int) int { return n*n },
		那么就赋值 f := square,
		而且可以 fmt.Println(f(3))		//打印出 9

Go语言有两点比较特别：
· 函数值类型不能作为map的key
· 函数值之间不可以比较，函数值只可以和nil作比较，函数值的零值是nil
